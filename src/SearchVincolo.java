/*
 * file : SearchVincolo.java
 */
package progettopastoreluca;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Pannello che permette la ricerca di un Vincolo e la visualizzazione delle 
 * Colonne su cui esso agisce
 * 
 * @author Luca Pastore N86002599
 * @version 2019
 */
public class SearchVincolo extends javax.swing.JPanel {

    private TableModel vincoloTableModel; //modello tabella visualizzazione Vincolo cercato
    private TableModel objectTableModel; //modello tabella visualizzazione Colonne su cui agisce il vincolo
    
    private int vincoloTrovato; //indicherà se la ricrca del Vincolo ha prodotto risultati o meno
    private final int NO = 0;
    private final int SI = 1;
    
    private int IDvincolo = -1;
    
    /**
     * Creates new form SearchVincolo
     */
    public SearchVincolo() {
        this.setSize(770,418);
        initComponents();
        
        vincoloTrovato = NO;
        vincoloTable.setModel(new DefaultTableModel());
        objectTable.setModel(new DefaultTableModel());
    }

    //Metodo che mostra a video l'errore generatosi durante l'operazione SQL
    public void mostraErrore(SQLException e) {
        String msg;
        
        msg = "Codice Errore: " + e.getErrorCode() + "\n";
        msg += "Messaggio: " + e.getMessage() + "\n";
        msg += "SQLState: " + e.getSQLState() + "\n";

        JOptionPane.showMessageDialog(this, msg, "Errore", JOptionPane.ERROR_MESSAGE);
    }
    
    //ricava l'ID del Vincolo selezionato nella JTable vincoloTable
    private void ricavaID(){
        
        if(vincoloTable.getRowCount() == 1){
            /**
             * se è stata trovata solo una riga che rispetta i criteri di ricerca, allora viene ricavato l'ID 
             * dell'unica riga trovata
             */
            IDvincolo = Integer.parseInt(vincoloTable.getValueAt(0, 0).toString()) ;
        }else if(vincoloTable.getSelectedRow() != -1){
            /**
             * se è stata torvata più di una riga che rispetta i criteri di ricerca, allora prima di poter ricavare l'ID di un Vincolo
             * l'utente dovrà selezionare una riga dalla vincoloTable
             */
            IDvincolo = Integer.parseInt(vincoloTable.getValueAt(vincoloTable.getSelectedRow(), 0).toString());
        }else{
            JOptionPane.showMessageDialog(this, "Errore: selezionare prima una riga", "Errore", JOptionPane.ERROR_MESSAGE);
            IDvincolo = -1;
        }
    }
    
    //in base al RadioButton selezionato e alla riga selezionata dalla vincoloTable, recupera le righe dalla tabella corrispondente e le mostra nell'objectTable
    private void mostraOggetti(String query){
        PreparedStatement pstmt;
        ResultSet rs;
        
        ricavaID(); //ricavo l'ID del Vincolo del quale ci insteressa visualizzare le colonne su cui agisce
        
        if(vincoloTrovato == SI && IDvincolo != -1){ 
            try{
                pstmt = Database.getDefaultConnection().prepareStatement(query + " WHERE ID_vincolo = " + IDvincolo);
                rs = pstmt.executeQuery();
                
                objectTableModel = new TableModel(rs);
                objectTableModel.setEditable(false);
                objectTableModel.setNumColumn();
                
                while(rs.next()) {
                    int riga = objectTableModel.getRowCount(); 
                    objectTableModel.setRowCount(objectTableModel.getRowCount() + 1); //nuova riga
                    for(int c = 0; c < objectTableModel.getColumnCount(); c++) {
                        Object valore = rs.getObject(c+1);
                        objectTableModel.setValueAt(valore, riga, c);
                    }
                }
                
                objectTable.setModel(objectTableModel);
                
                pstmt.close();
            }catch(SQLException e){
                mostraErrore(e);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vincoloButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        vincoloTextField = new javax.swing.JTextField();
        istr1 = new javax.swing.JLabel();
        istr2 = new javax.swing.JLabel();
        istr3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vincoloTable = new javax.swing.JTable();
        colRadioButton = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        objectTable = new javax.swing.JTable();
        colAssocRadioButton1 = new javax.swing.JRadioButton();
        istr5 = new javax.swing.JLabel();

        searchLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        searchLabel.setText("Inserire il nome del Vincolo da cercare :");

        searchButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        searchButton.setText("Cerca");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        vincoloTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchLabel)
                .addGap(18, 18, 18)
                .addComponent(vincoloTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vincoloTextField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        istr1.setText("Di seguito verranno mostrate le informazioni del Vincolo cercato; selezionare un bottone per visualizzare le colonne su cui agisce.");

        istr2.setText("Se la ricerca ha restituito più risultati, selezionare una riga per visualizzare le relative informazioni; ");

        istr3.setText("se ha restituito una sola riga, non è neccessario selezionarla.");

        vincoloTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(vincoloTable);

        vincoloButtonGroup.add(colRadioButton);
        colRadioButton.setText("Colonne");
        colRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colRadioButtonActionPerformed(evt);
            }
        });

        objectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(objectTable);

        vincoloButtonGroup.add(colAssocRadioButton1);
        colAssocRadioButton1.setText("Info Foreign Key");
        colAssocRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colAssocRadioButton1ActionPerformed(evt);
            }
        });

        istr5.setText("Selezionare gli ultimi 2 bottoni solo per vincoli di Foreign key.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(colRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(colAssocRadioButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(istr1)
                                    .addComponent(istr2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(istr3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(istr5)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(istr1)
                .addGap(0, 0, 0)
                .addComponent(istr2)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(istr3)
                    .addComponent(istr5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colRadioButton)
                    .addComponent(colAssocRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        PreparedStatement pstmt;
        ResultSet rs;
        String query = "SELECT id_vincolo AS id, nomeVincolo AS nome_vincolo, tipo, condCheck AS Condizione_Check, stato, (SELECT T.nomeTabella FROM tabella T WHERE T.id_tabella = V.tabella) AS Tabella, proprietario FROM Vincolo V ";

        if(!vincoloTextField.getText().equals("")){
            query += "WHERE nomeVincolo = ?";
        }
            
        try{
            pstmt = Database.getDefaultConnection().prepareStatement(query,  ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            if(!vincoloTextField.getText().equals("")){
                pstmt.setString(1, vincoloTextField.getText());
            }
            rs = pstmt.executeQuery();

            if(rs.last()){
                rs.beforeFirst();

                vincoloTableModel = new TableModel(rs);
                vincoloTableModel.setEditable(false);
                vincoloTableModel.setNumColumn();

                while(rs.next()) {
                    int riga = vincoloTableModel.getRowCount();
                    vincoloTableModel.setRowCount(vincoloTableModel.getRowCount() + 1); //nuova riga
                    for(int c = 0; c < vincoloTableModel.getColumnCount(); c++) {
                        Object valore = rs.getObject(c+1);
                        vincoloTableModel.setValueAt(valore, riga, c);
                    }
                }

                vincoloTrovato = SI;
                vincoloTable.setModel(vincoloTableModel);
            }else{
                JOptionPane.showMessageDialog(this, "Nessun Vincolo trovata !", "Ricerca vuota", JOptionPane.WARNING_MESSAGE);
                vincoloTable.setModel(new DefaultTableModel());
                objectTable.setModel(new DefaultTableModel());
                vincoloTrovato = NO;
            }

            pstmt.close();
        }catch(SQLException e){
            mostraErrore(e);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void colRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colRadioButtonActionPerformed
        mostraOggetti("SELECT nomeColonna AS nome_colonna, tabella FROM infoColonneVincolo ");
    }//GEN-LAST:event_colRadioButtonActionPerformed

    private void colAssocRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colAssocRadioButton1ActionPerformed
        int indiceRiga = -1;
        
        if(vincoloTable.getRowCount() == 1){
            indiceRiga = 0;
        }else if(vincoloTable.getSelectedRow() != -1){
            indiceRiga = vincoloTable.getSelectedRow();  
        }
        
        if(vincoloTable.getValueAt(indiceRiga, 2).toString().equals("FOREIGN KEY") && indiceRiga != -1)
            mostraOggetti("SELECT regCanc AS regola_di_cancellazione, (SELECT nomeTabella FROM tabella WHERE id_tabella = id_tabRef) AS tabella_associata FROM chiaveEsterna ");
        else{
            JOptionPane.showMessageDialog(this, "Questa sezione è possibile solo per vincoli FOREIGN KEY", "Attenzione", JOptionPane.WARNING_MESSAGE);                  
            vincoloButtonGroup.clearSelection();
        }
    }//GEN-LAST:event_colAssocRadioButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton colAssocRadioButton1;
    private javax.swing.JRadioButton colRadioButton;
    private javax.swing.JLabel istr1;
    private javax.swing.JLabel istr2;
    private javax.swing.JLabel istr3;
    private javax.swing.JLabel istr5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable objectTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.ButtonGroup vincoloButtonGroup;
    private javax.swing.JTable vincoloTable;
    private javax.swing.JTextField vincoloTextField;
    // End of variables declaration//GEN-END:variables
}
