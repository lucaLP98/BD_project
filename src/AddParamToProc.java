/*
 * file : AddParamToProc.java
 */
package progettopastoreluca;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 * Pannello che permette di aggiungere Parametri a procedure o funzioni esistenti
 * 
 * @author Luca Pastore N86002599
 * @verison 2019
 */
public class AddParamToProc extends javax.swing.JPanel {

    private PreparedStatement pstmt = null;
    private final String queryIns = "INSERT INTO parametri(nomeParam, tipo, tipologiaPar, ID_proc) VALUES(?, ?, ?, ?)";
    private int righeInserite = 0;
    
    /**
     * Creates new form AddParamToProc
     */
    public AddParamToProc() {
        this.setSize(770,418);
        initComponents();
    }

    //controlla se i campi di input sono stati riempiti tutti
    private boolean campiVuoti(){
        return nomeParametroTextField.getText().equals("") || tipoComboBox.getSelectedIndex() == -1 || 
               (inputRadioButton.isSelected() == false && outputRadioButton.isSelected() == false) ||
                procComboBox.getSelectedIndex() == -1;
    }
    
    //Metodo che mostra a video l'errore generatosi durante l'inserimento di un elemento Parametro nel database
    private void mostraErrore(SQLException e) {
        String msg;
        
        msg = "Codice Errore: " + e.getErrorCode() + "\n";
        msg += "Messaggio: " + e.getMessage() + "\n";
        msg += "SQLState: " + e.getSQLState() + "\n";

        JOptionPane.showMessageDialog(this, msg, "Errore", JOptionPane.ERROR_MESSAGE);
    }
    
    //riempe la procComboBox con le Procedure e Fuznioni presenti nel database
    public void riempiProcComboBox(){
        Statement stmt;
        ResultSet rst;
        String query = "SELECT P.schema, P.nomeProcedura FROM Procedura P";
        
        procComboBox.removeAllItems();
        try{
            stmt = Database.getDefaultConnection().createStatement();
            rst = stmt.executeQuery(query);
            
            while(rst.next()){
                //le Procedure nella comboBox saranno mostrate secondo il modello: nomeSchema.nomeProcedura
                //in quanto Procedure appartenenti a Schemi diversi possono avere lo stesso nome
                procComboBox.addItem(rst.getString(1)+"."+rst.getString(2));
            }
            procComboBox.setSelectedIndex(-1);
            
            stmt.close();
        }catch(SQLException e){
            mostraErrore(e);
        }
    }
    
    //ricava il nome della Procedura selezionato nella procComboBox
    private String ricavaNomeProc(String itemSelected){
        int i = 0;
        String schema;
        
        while(itemSelected.charAt(i) != '.'){
            i++;
        }
        
        schema = itemSelected.substring(i+1);
        
        return schema;
    }
    
    //ricava il nome dello schema a cui appartiene la procedura scelto
    private String ricavaSchemaProc(String itemSelected){
        int i = 0;
        String schema;
        
        while(itemSelected.charAt(i) != '.'){
            i++;
        }
        
        schema = itemSelected.substring(0, i);
        
        return schema;
    }
    
    //ricava la chiave primaria id_procedura della Procedura scelta nella procComboBox
    private int ricavaIDproc(String itemSelected){
        String proc = ricavaNomeProc(itemSelected);
        String schema = ricavaSchemaProc(itemSelected);
        int id = -1;
        
        Statement stmt; 
        ResultSet rst;
        String query = "SELECT P.ID_procedura FROM Procedura P WHERE P.nomeProcedura = '" + proc + "' AND P.schema = '" + schema + "'";
    
        try{
            stmt = Database.getDefaultConnection().createStatement();
            rst = stmt.executeQuery(query);
            
            while(rst.next()){
                id = rst.getInt(1);
            }
            
            stmt.close();
        }catch(SQLException e){
            mostraErrore(e);
        }
        
        return id;
    }
    
    //azzera campi di input
    public void pulisciInput(){
        nomeParametroTextField.setText("");
        procComboBox.setSelectedIndex(-1);
        tipoComboBox.setSelectedIndex(-1);
        tipoButtonGroup.clearSelection();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoButtonGroup = new javax.swing.ButtonGroup();
        istr1 = new javax.swing.JLabel();
        proceduraLabel = new javax.swing.JLabel();
        nomeParametroLabel = new javax.swing.JLabel();
        nomeParametroTextField = new javax.swing.JTextField();
        tipologiaLabel = new javax.swing.JLabel();
        inputRadioButton = new javax.swing.JRadioButton();
        outputRadioButton = new javax.swing.JRadioButton();
        tipoComboBox = new javax.swing.JComboBox<>();
        tipoLabel = new javax.swing.JLabel();
        campoObb = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        annullaButton = new javax.swing.JButton();
        procComboBox = new javax.swing.JComboBox<>();

        istr1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        istr1.setText("Questo Pannello permette di aggiungere un Parametro ad una Procedura/Funzione esistente");

        proceduraLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        proceduraLabel.setText("Procedura / Funzione *");

        nomeParametroLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeParametroLabel.setText("Nome Parametro *");

        nomeParametroTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tipologiaLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tipologiaLabel.setText("Tipologia Parametro *");

        tipoButtonGroup.add(inputRadioButton);
        inputRadioButton.setText("INPUT");

        tipoButtonGroup.add(outputRadioButton);
        outputRadioButton.setText("OUTPUT");

        tipoComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tipoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NUMBER", "INTEGER", "FLOAT", "DOUBLE", "REAL", "CHAR", "VARCHAR", "BIT", "DATE" }));
        tipoComboBox.setSelectedIndex(-1);

        tipoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tipoLabel.setText("Tipo Parametro *");

        campoObb.setText("*  Campo Obbligatorio");

        addButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        addButton.setText("Aggiungi Parametro");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        annullaButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        annullaButton.setText("Annulla");
        annullaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annullaButtonActionPerformed(evt);
            }
        });

        procComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(istr1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(campoObb)
                                .addGap(62, 62, 62)
                                .addComponent(addButton)
                                .addGap(58, 58, 58)
                                .addComponent(annullaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tipologiaLabel)
                                    .addComponent(tipoLabel)
                                    .addComponent(nomeParametroLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(proceduraLabel))
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(nomeParametroTextField)
                                        .addComponent(procComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(inputRadioButton)
                                        .addGap(37, 37, 37)
                                        .addComponent(outputRadioButton))
                                    .addComponent(tipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(istr1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(proceduraLabel)
                    .addComponent(procComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeParametroLabel)
                    .addComponent(nomeParametroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(tipologiaLabel))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(inputRadioButton)
                        .addComponent(outputRadioButton)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tipoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(annullaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoObb))
                .addGap(62, 62, 62))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try{
            if(campiVuoti()){
                JOptionPane.showMessageDialog(this, "Prima di effettuare l'inserimento di un parametro\nriempire tutti i campi obbligatori !", "Attenzione", JOptionPane.WARNING_MESSAGE);
            }else{
                pstmt = Database.getDefaultConnection().prepareStatement(queryIns);

                pstmt.setString(1, nomeParametroTextField.getText());
                pstmt.setString(2, (String)tipoComboBox.getSelectedItem());
                if(inputRadioButton.isSelected())
                    pstmt.setString(3, inputRadioButton.getText());
                else
                    pstmt.setString(3, outputRadioButton.getText());
                pstmt.setInt(4, ricavaIDproc(procComboBox.getSelectedItem().toString()));

                righeInserite = pstmt.executeUpdate();

                if(righeInserite != 0){
                    JOptionPane.showMessageDialog(this, "Il parametro " + nomeParametroTextField.getText() + " è stato aggiunto alla procedura " + procComboBox.getSelectedItem().toString() + " !", "Inserimento effettuato", JOptionPane.INFORMATION_MESSAGE);
                    pulisciInput();
                }
                
                if(pstmt != null) pstmt.close();
            }
        }catch(SQLException e) {
            mostraErrore(e);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void annullaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annullaButtonActionPerformed
        pulisciInput();
    }//GEN-LAST:event_annullaButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton annullaButton;
    private javax.swing.JLabel campoObb;
    private javax.swing.JRadioButton inputRadioButton;
    private javax.swing.JLabel istr1;
    private javax.swing.JLabel nomeParametroLabel;
    private javax.swing.JTextField nomeParametroTextField;
    private javax.swing.JRadioButton outputRadioButton;
    private javax.swing.JComboBox<String> procComboBox;
    private javax.swing.JLabel proceduraLabel;
    private javax.swing.ButtonGroup tipoButtonGroup;
    private javax.swing.JComboBox<String> tipoComboBox;
    private javax.swing.JLabel tipoLabel;
    private javax.swing.JLabel tipologiaLabel;
    // End of variables declaration//GEN-END:variables
}
