/*
 * file : InsertParametri.java
 */
package progettopastoreluca;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 * Finestra di dialogo utilizzata per l'inserimento dei parametri
 * per una procedura
 * 
 * @author Luca Pastore N86002599
 * @version 2019
 */
public class InsertParametri extends javax.swing.JDialog {

    private PreparedStatement pstmt = null;
    private final String queryIns = "INSERT INTO parametri(nomeParam, tipo, tipologiaPar, ID_proc) VALUES(?, ?, ?, ?)";
    private int righeInserite = 0;
    
    private int id_proc;
    private InsertProcedura proc;
    
    private InsertVariabili iVar;
    
    /**
     * Creates new form InsertParametri
     */
    public InsertParametri(InsertProcedura p) {
        this.setSize(412, 302);
        initComponents();
        this.setVisible(true);
        
        p.enabledAnnullaButton(false);
        proceduraTextField.setText(p.getNomeProc());
        proceduraTextField.setEnabled(false);
        id_proc = p.getIDprocedura();
        proc = p;
    }

    //controlla se i campi di input sono stati riempiti tutti
    private boolean campiVuoti(){
        return nomeParametroTextField.getText().equals("") || tipoComboBox.getSelectedIndex() == -1 || 
               (inputRadioButton.isSelected() == false && outputRadioButton.isSelected() == false);
    }
    
    //azzera campi di input
    public void pulisciInput(){
        nomeParametroTextField.setText("");
        tipoComboBox.setSelectedIndex(-1);
        tipologiaButtonGroup.clearSelection();
    }
    
    //Metodo che mostra a video l'errore generatosi durante l'inserimento di un elemento nel database
    private void mostraErrore(SQLException e) {
        String msg;
        
        msg = "Codice Errore: " + e.getErrorCode() + "\n";
        msg += "Messaggio: " + e.getMessage() + "\n";
        msg += "SQLState: " + e.getSQLState() + "\n";

        JOptionPane.showMessageDialog(this, msg, "Errore", JOptionPane.ERROR_MESSAGE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipologiaButtonGroup = new javax.swing.ButtonGroup();
        istr1 = new javax.swing.JLabel();
        istr2 = new javax.swing.JLabel();
        proceduraLabel = new javax.swing.JLabel();
        nomeParametroTextField = new javax.swing.JTextField();
        tipologiaLabel = new javax.swing.JLabel();
        inputRadioButton = new javax.swing.JRadioButton();
        outputRadioButton = new javax.swing.JRadioButton();
        nomeParametroLabel = new javax.swing.JLabel();
        proceduraTextField = new javax.swing.JTextField();
        tipoLabel = new javax.swing.JLabel();
        tipoComboBox = new javax.swing.JComboBox<>();
        campoObb = new javax.swing.JLabel();
        insertButton = new javax.swing.JButton();
        endButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Inserimento Parametri Procedura");

        istr1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        istr1.setText("Inserire i parametri utilizzati dalla procedura/funzione");

        istr2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        istr2.setText("appena inserita. Premere \"Fine\" per terminare.");

        proceduraLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        proceduraLabel.setText("Procedura / Funzione ");

        nomeParametroTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tipologiaLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tipologiaLabel.setText("Tipologia Parametro *");

        tipologiaButtonGroup.add(inputRadioButton);
        inputRadioButton.setText("INPUT");

        tipologiaButtonGroup.add(outputRadioButton);
        outputRadioButton.setText("OUTPUT");

        nomeParametroLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeParametroLabel.setText("Nome Parametro *");

        proceduraTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tipoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tipoLabel.setText("Tipo Parametro *");

        tipoComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tipoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NUMBER", "INTEGER", "FLOAT", "DOUBLE", "REAL", "CHAR", "VARCHAR", "BIT", "DATE" }));
        tipoComboBox.setSelectedIndex(-1);

        campoObb.setText("*  Campo Obbligatorio");

        insertButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        insertButton.setText("Inserisci");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        endButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        endButton.setText("Fine");
        endButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(istr1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                    .addComponent(istr2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nomeParametroLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nomeParametroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(proceduraLabel)
                            .addComponent(tipologiaLabel)
                            .addComponent(tipoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(inputRadioButton)
                                .addGap(37, 37, 37)
                                .addComponent(outputRadioButton)
                                .addGap(23, 23, 23))
                            .addComponent(proceduraTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipoComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(campoObb)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(insertButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(istr1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(istr2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proceduraLabel)
                    .addComponent(proceduraTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeParametroLabel)
                    .addComponent(nomeParametroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipologiaLabel)
                    .addComponent(inputRadioButton)
                    .addComponent(outputRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoLabel)
                    .addComponent(tipoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(campoObb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(endButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        try{
            if(campiVuoti()){
                JOptionPane.showMessageDialog(this, "Prima di effettuare l'inserimento di un parametro\nriempire tutti i campi obbligatori !", "Attenzione", JOptionPane.WARNING_MESSAGE);
            }else{
                pstmt = Database.getDefaultConnection().prepareStatement(queryIns);

                pstmt.setString(1, nomeParametroTextField.getText());
                pstmt.setString(2, (String)tipoComboBox.getSelectedItem());
                if(inputRadioButton.isSelected())
                    pstmt.setString(3, inputRadioButton.getText());
                else
                    pstmt.setString(3, outputRadioButton.getText());
                pstmt.setInt(4, id_proc);

                righeInserite = pstmt.executeUpdate();

                if(righeInserite != 0){
                    JOptionPane.showMessageDialog(this, "Il parametro " + nomeParametroTextField.getText() + " è stato aggiunto alla procedura !", "Inserimento effettuato", JOptionPane.INFORMATION_MESSAGE);
                    pulisciInput();
                }
                
                if(pstmt != null) pstmt.close();
            }
        }catch(SQLException e) {
            mostraErrore(e);
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    private void endButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endButtonActionPerformed
        JOptionPane.showMessageDialog(this, "Ora verrà aperta una finestra di dialogo per l'inserimento\ndelle variabili dicchiarate nella procedura appena inserita.\nPremere Fine se la procedura non ha variabili.", "Fine inserimento parametri", JOptionPane.INFORMATION_MESSAGE);
        iVar = new InsertVariabili(proc);
        dispose();
    }//GEN-LAST:event_endButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel campoObb;
    private javax.swing.JButton endButton;
    private javax.swing.JRadioButton inputRadioButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel istr1;
    private javax.swing.JLabel istr2;
    private javax.swing.JLabel nomeParametroLabel;
    private javax.swing.JTextField nomeParametroTextField;
    private javax.swing.JRadioButton outputRadioButton;
    private javax.swing.JLabel proceduraLabel;
    private javax.swing.JTextField proceduraTextField;
    private javax.swing.JComboBox<String> tipoComboBox;
    private javax.swing.JLabel tipoLabel;
    private javax.swing.ButtonGroup tipologiaButtonGroup;
    private javax.swing.JLabel tipologiaLabel;
    // End of variables declaration//GEN-END:variables
}
