/*
 * file : InsertVariabili.java
 */
package progettopastoreluca;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 * Finestra di dialogo utilizzata per l'inserimento delle variabili in procedure/funzioni o trigger
 * 
 * @author Luca Pastore N86002599
 * @version 2019
 */
public class InsertVariabili extends javax.swing.JDialog {

    private final int VAR_PROCEDURA = 1;
    private final int VAR_TRIGGER = 2;
    private int tipoVar;
    
    private InsertException iExc;
    
    private InsertProcedura proc;
    private InsertTrigger trig;
    private int id_parent;
    
    private PreparedStatement pstmt = null;
    private ResultSet rs = null;
    private final String queryIns1 = "INSERT INTO variabili(nomeVariabile, Tipo, ID_proc) VALUES(?, ?, ?)";
    private final String queryIns2 = "INSERT INTO variabili(nomeVariabile, Tipo, ID_trigger) VALUES(?, ?, ?)";
    private int righeInserite = 0;
    
    /**
     * Creates new form InsertVariabili
     * @param parent pannello InsertProcedura che richiama la dialog
     */
    public InsertVariabili(InsertProcedura parent) {
        this.setSize(417, 309);
        this.setVisible(true);
        initComponents();
        
        triggerLabel.setVisible(false);
        triggerTextField.setVisible(false);
        procTextField.setText(parent.getNomeProc());
        procTextField.setEditable(false);
        
        parent.enabledAnnullaButton(false);
        proc = parent;
        id_parent = parent.getIDprocedura();
        
        tipoVar = VAR_PROCEDURA;
    }
    
    /**
     * Creates new form InsertVariabili
     * @param parent pannello InsertTrigger che richiama la dialog
     */
    public InsertVariabili(InsertTrigger parent) {
        this.setSize(417, 309);
        this.setVisible(true);
        initComponents();
        
        procLabel.setVisible(false);
        procTextField.setVisible(false);
        triggerTextField.setText(parent.getNomeTrigger());
        triggerTextField.setEditable(false);
        
        parent.enabledAnnullaButton(false);
        trig = parent;
        id_parent = parent.getIDtrigger();
        
        tipoVar = VAR_TRIGGER;
    }

    //controlla se i campi di input sono stati riempiti tutti
    private boolean campiVuoti(){
        return nomeVarTextField.getText().equals("") || tipoVarComboBox.getSelectedIndex() == -1;
    }
    
    //azzera campi di input
    public void pulisciInput(){
        nomeVarTextField.setText("");
        tipoVarComboBox.setSelectedIndex(-1);
    }
    
    //Metodo che mostra a video l'errore generatosi durante l'inserimento di un elemento nel database
    private void mostraErrore(SQLException e) {
        String msg;
        
        msg = "Codice Errore: " + e.getErrorCode() + "\n";
        msg += "Messaggio: " + e.getMessage() + "\n";
        msg += "SQLState: " + e.getSQLState() + "\n";

        JOptionPane.showMessageDialog(this, msg, "Errore", JOptionPane.ERROR_MESSAGE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        istr1 = new javax.swing.JLabel();
        istr2 = new javax.swing.JLabel();
        nomeVarLabel = new javax.swing.JLabel();
        triggerLabel = new javax.swing.JLabel();
        triggerTextField = new javax.swing.JTextField();
        procLabel = new javax.swing.JLabel();
        procTextField = new javax.swing.JTextField();
        nomeVarTextField = new javax.swing.JTextField();
        tipoLabel = new javax.swing.JLabel();
        tipoVarComboBox = new javax.swing.JComboBox<>();
        campoObbl = new javax.swing.JLabel();
        endButton = new javax.swing.JButton();
        insertButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Inserimento Variabili");

        istr1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        istr1.setText("Di sequito verranno inseriti i dati relativi alle variabili ");

        istr2.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        istr2.setText("da inserire. Premere \"Fine\" per terminare l'inserimento.");

        nomeVarLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nomeVarLabel.setText("Nome Variabile  *");

        triggerLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        triggerLabel.setText("Trigger  ");

        triggerTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        procLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        procLabel.setText("Procedura");

        procTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        nomeVarTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tipoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tipoLabel.setText("Tipo Variabile *");

        tipoVarComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tipoVarComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NUMBER", "INTEGER", "FLOAT", "DOUBLE", "REAL", "CHAR", "VARCHAR", "BIT", "DATE" }));
        tipoVarComboBox.setSelectedIndex(-1);

        campoObbl.setText("*  Campo Obbligatorio");

        endButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        endButton.setText("Fine");
        endButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endButtonActionPerformed(evt);
            }
        });

        insertButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        insertButton.setText("Inserisci");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(istr1)
                            .addComponent(istr2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(tipoLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tipoVarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(triggerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(procLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(nomeVarLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(triggerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(procTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nomeVarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(campoObbl)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(endButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(istr1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(istr2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(triggerLabel)
                    .addComponent(triggerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(procLabel)
                    .addComponent(procTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nomeVarLabel)
                    .addComponent(nomeVarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tipoLabel)
                    .addComponent(tipoVarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoObbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(insertButton, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void endButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endButtonActionPerformed
        if(tipoVar == VAR_PROCEDURA){
            JOptionPane.showMessageDialog(this, "Ora verrà aperta una finestra di dialogo per l'inserimento\ndelle Exception dicchiarate nella procedura appena inserita.\nPremere Fine se la procedura non ha Exception.", "Fine inserimento variabili", JOptionPane.INFORMATION_MESSAGE);
            iExc = new InsertException(proc);
        }else{
            JOptionPane.showMessageDialog(this, "Ora verrà aperta una finestra di dialogo per l'inserimento\ndelle Exception dicchiarate nel trigger appena inserito.\nPremere Fine se il trigger non ha Exception.", "Fine inserimento variabili", JOptionPane.INFORMATION_MESSAGE);
            iExc = new InsertException(trig);
        }
        
        dispose();
    }//GEN-LAST:event_endButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        try{
            if(campiVuoti()){
                 JOptionPane.showMessageDialog(this, "Prima di effettuare l'inserimento di una variabile\nriempire tutti i campi obbligatori !", "Attenzione", JOptionPane.WARNING_MESSAGE);
            }else{
                if(tipoVar == VAR_TRIGGER)
                    pstmt = Database.getDefaultConnection().prepareStatement(queryIns2);
                else
                    pstmt = Database.getDefaultConnection().prepareStatement(queryIns1);
                
                pstmt.setString(1, nomeVarTextField.getText());
                pstmt.setString(2, (String)tipoVarComboBox.getSelectedItem());
                pstmt.setInt(3, id_parent);
                
                righeInserite = pstmt.executeUpdate();
                if(righeInserite != 0){
                    JOptionPane.showMessageDialog(this, "La variabile " + nomeVarTextField.getText() + " è stata aggiunta", "Inserimento effettuato", JOptionPane.INFORMATION_MESSAGE);
                    pulisciInput();
                }
                
                if(pstmt != null) pstmt.close();
            }
        }catch(SQLException e) {
            mostraErrore(e);
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel campoObbl;
    private javax.swing.JButton endButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel istr1;
    private javax.swing.JLabel istr2;
    private javax.swing.JLabel nomeVarLabel;
    private javax.swing.JTextField nomeVarTextField;
    private javax.swing.JLabel procLabel;
    private javax.swing.JTextField procTextField;
    private javax.swing.JLabel tipoLabel;
    private javax.swing.JComboBox<String> tipoVarComboBox;
    private javax.swing.JLabel triggerLabel;
    private javax.swing.JTextField triggerTextField;
    // End of variables declaration//GEN-END:variables
}
