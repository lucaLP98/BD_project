/*
 * file : InsertColonneVincolo.java
 */
package progettopastoreluca;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 * JDialog utilizzata per inserire le colonne su cui agisce un vincolo,
 * cioe per poolare la tabella VincoloColonna
 * 
 * @author Luca Pastore N86002599
 * @version 2019
 */
public class InsertColonneVincolo extends javax.swing.JDialog {

    private InsertVincolo vincolo;
    private InsertColonneFK iCfk;
    private int idVinc;
    private int colonneInserite = 0;
    
    private PreparedStatement pstmt = null;
    private final String queryIns = "INSERT INTO vincoloColonna(ID_colonna, ID_vincolo) VALUES(?, ?)";
    private int righeInserite = 0;
    
    /**
     * Creates new form InsertColonneVincolo
     * @param v vincolo di riferimento
     */
    public InsertColonneVincolo(InsertVincolo v) {
        vincolo = v;
        idVinc = v.getIDvincolo();
        
        this.setSize(400, 259);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        initComponents();
        
        v.enabledAnnullaButton(false);
        riempiComboBox();
        endButton.setEnabled(false);
        vincoloTextField.setText(v.getNomeVincolo());
        vincoloTextField.setEnabled(false);
    }
    
    //Metodo che mostra a video l'errore generatosi durante l'inserimento di un elemento nel database
    private void mostraErrore(SQLException e) {
        String msg;
        
        msg = "Codice Errore: " + e.getErrorCode() + "\n";
        msg += "Messaggio: " + e.getMessage() + "\n";
        msg += "SQLState: " + e.getSQLState() + "\n";

        JOptionPane.showMessageDialog(this, msg, "Errore", JOptionPane.ERROR_MESSAGE);
    }

    private int ricavaIDcolonna(){
        Statement stmt;
        ResultSet rs;
        int id = -1;
        String query = "SELECT id_colonna FROM colonna WHERE nomeColonna = '" + (String)nomeColComboBox.getSelectedItem() + "' AND tabella = " + vincolo.getIDtab();
    
        if(nomeColComboBox.getSelectedIndex() != -1){
            try{
                stmt = Database.getDefaultConnection().createStatement();
                rs = stmt.executeQuery(query);
            
                while(rs.next()){
                    id = rs.getInt(1);
                }
                
                stmt.close();
            }catch(SQLException e){
                mostraErrore(e);
            }
        }
        return id;
    }
    
    private void riempiComboBox(){
        Statement stmt;
        ResultSet rs;
        String query = "SELECT nomeColonna FROM colonna WHERE tabella = " + vincolo.getIDtab();
        
        nomeColComboBox.removeAllItems();
        try{
            stmt = Database.getDefaultConnection().createStatement();
            rs = stmt.executeQuery(query);
            
            while(rs.next()){
                nomeColComboBox.addItem(rs.getString(1));
            }
            
            nomeColComboBox.setSelectedIndex(-1);
            
            stmt.close();
        }catch(SQLException e){
            mostraErrore(e);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        istrLabel1 = new javax.swing.JLabel();
        istrLabel3 = new javax.swing.JLabel();
        nomeColLabel = new javax.swing.JLabel();
        nomeColComboBox = new javax.swing.JComboBox<>();
        insertButton = new javax.swing.JButton();
        endButton = new javax.swing.JButton();
        campoObb = new javax.swing.JLabel();
        istr2 = new javax.swing.JLabel();
        nomeVincLabel = new javax.swing.JLabel();
        vincoloTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Inserimento Colonne Vincolo");

        istrLabel1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        istrLabel1.setText("Selezionare le colonne su cui agisce il vincolo");

        istrLabel3.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        istrLabel3.setText("Premere \"Fine\" per terminare l'inserimento.");

        nomeColLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        nomeColLabel.setText("Nome Colonna  *");

        nomeColComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        insertButton.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        insertButton.setText("Inserisci");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        endButton.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        endButton.setText("Fine");
        endButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endButtonActionPerformed(evt);
            }
        });

        campoObb.setText("*  Campo Obbligatorio");

        istr2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        istr2.setText("Ricorda: inserire almeno una colonna su cui agisce il vincolo.");

        nomeVincLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        nomeVincLabel.setText("Nome Vincolo  *");

        vincoloTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(istrLabel1)
                    .addComponent(istrLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(insertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(endButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(campoObb)
                    .addComponent(istr2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomeColLabel)
                            .addComponent(nomeVincLabel))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nomeColComboBox, 0, 170, Short.MAX_VALUE)
                            .addComponent(vincoloTextField))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(istrLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(istrLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(istr2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(nomeVincLabel)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vincoloTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeColLabel)
                    .addComponent(nomeColComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton)
                    .addComponent(endButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoObb)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void endButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endButtonActionPerformed
        if(vincolo.getTipoVincolo().equals("FOREIGN KEY")){
            JOptionPane.showMessageDialog(this, "Ora si verra reindizirrazi all'inserimento delle colonne\nda mettere in corrispondenza mediante il vincolo di FOREIGN KEY.", "Inserimento colonne FK", JOptionPane.INFORMATION_MESSAGE); 
            iCfk = new InsertColonneFK(vincolo, colonneInserite);
        }else{
            vincolo.pulisciInput();
            vincolo.enabledAnnullaButton(true);
        }   
        
        dispose();
    }//GEN-LAST:event_endButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        try{
            if(nomeColComboBox.getSelectedIndex() == -1){
                JOptionPane.showMessageDialog(this, "Prima di effettuare l'inserimento, rimepire tutti i campi obbligatori", "Attenzione", JOptionPane.WARNING_MESSAGE); 
            }else{
                pstmt = Database.getDefaultConnection().prepareStatement(queryIns);
            
                pstmt.setInt(1, ricavaIDcolonna());
                pstmt.setInt(2, idVinc);
            
                righeInserite = pstmt.executeUpdate();
                if(righeInserite != 0){
                    colonneInserite++;
                    JOptionPane.showMessageDialog(this, "Inserimento Riuscito Correttamente !", "Inserimento  effettuato", JOptionPane.INFORMATION_MESSAGE); 
                    nomeColComboBox.removeItem(nomeColComboBox.getSelectedItem());
                    nomeColComboBox.setSelectedIndex(-1);
                    endButton.setEnabled(true);
                }
                
                if(pstmt != null) pstmt.close();
            }
        }catch(SQLException e){
            mostraErrore(e);
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel campoObb;
    private javax.swing.JButton endButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel istr2;
    private javax.swing.JLabel istrLabel1;
    private javax.swing.JLabel istrLabel3;
    private javax.swing.JComboBox<String> nomeColComboBox;
    private javax.swing.JLabel nomeColLabel;
    private javax.swing.JLabel nomeVincLabel;
    private javax.swing.JTextField vincoloTextField;
    // End of variables declaration//GEN-END:variables
}
