/*
 * file : SearchUser.java
 */
package progettopastoreluca;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Pannello utilizzato per effettuare la ricerca di un elemento Utente nel database
 * e visualizzare tutti gli oggetti che egli ha creato
 * 
 * @author Luca Pastore N86002599
 * @version 2019
 */
public class SearchUser extends javax.swing.JPanel {
    private TableModel userTableModel; //modello tabella visualizzazione Utente cercato
    private TableModel objectTableModel; //modello tabella visualizzazione oggetti creati da utente cercato
    
    private int utenteTrovato; //indicherà se la ricrca dell'utente ha prodotto risultati o meno
    private final int NO = 0;
    private final int SI = 1;
    
    /**
     * Creates new form SearchUser
     */
    public SearchUser() {
        this.setSize(770,418);
        initComponents();
        
        utenteTrovato = NO;
        userTable.setModel(new DefaultTableModel());
        objectTable.setModel(new DefaultTableModel());
    }
    
    //Metodo che mostra a video l'errore generatosi durante l'operazione SQL
    public void mostraErrore(SQLException e) {
        String msg;
        
        msg = "Codice Errore: " + e.getErrorCode() + "\n";
        msg += "Messaggio: " + e.getMessage() + "\n";
        msg += "SQLState: " + e.getSQLState() + "\n";

        JOptionPane.showMessageDialog(this, msg, "Errore", JOptionPane.ERROR_MESSAGE);
    }
    
    //riempe la objectTable con gli oggetti selezionati
    private void creaObjectTable(ResultSet rs){
        try{
            objectTableModel = new TableModel(rs);
            objectTableModel.setEditable(false);
            objectTableModel.setNumColumn();
                
            while(rs.next()) {
                int riga = objectTableModel.getRowCount(); 
                objectTableModel.setRowCount(objectTableModel.getRowCount() + 1); //nuova riga
                for(int c = 0; c < objectTableModel.getColumnCount(); c++) {
                    Object valore = rs.getObject(c+1);
                    objectTableModel.setValueAt(valore, riga, c);
                }
            }
                
            objectTable.setModel(objectTableModel);
        }catch(SQLException e){
            mostraErrore(e);
        }
    }
    
    //in base al RadioButton selezionato, recupera le righe dalla tabella corrispondente e le mostra nell'objectTable
    private void mostraOggetti(String query){
        PreparedStatement pstmt;
        ResultSet rs;
        boolean continua = false;
        
        if(utenteTrovato == SI){ 
            try{
                pstmt = Database.getDefaultConnection().prepareStatement(query + " WHERE proprietario = ?");
                
                if(userTable.getRowCount() == 1){
                    pstmt.setString(1, userTable.getValueAt(0, 0).toString());
                    continua = true;
                }else if(userTable.getSelectedRow() != -1){
                    pstmt.setString(1, userTable.getValueAt(userTable.getSelectedRow(), 0).toString());
                    continua = true;
                }else{
                    JOptionPane.showMessageDialog(this, "ERRORE: Selezionare prima una riga !", "Errore", JOptionPane.ERROR_MESSAGE);                    
                }
                
                if(continua){
                    rs = pstmt.executeQuery();
                    creaObjectTable(rs);
                }
                
                pstmt.close();
            }catch(SQLException e){
                mostraErrore(e);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        oggButtonGroup = new javax.swing.ButtonGroup();
        searchLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        selectLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        assertRadioButton = new javax.swing.JRadioButton();
        domRadioButton = new javax.swing.JRadioButton();
        procRadioButton = new javax.swing.JRadioButton();
        schemaRadioButton = new javax.swing.JRadioButton();
        seqRadioButton = new javax.swing.JRadioButton();
        tabRadioButton = new javax.swing.JRadioButton();
        trigRadioButton = new javax.swing.JRadioButton();
        vincoloRadioButton = new javax.swing.JRadioButton();
        vistaRadioButton = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        objectTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        searchLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        searchLabel.setText("Inserire l' Username dell'utente da cercare : ");

        usernameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(userTable);

        selectLabel.setText("Di seguito verranno mostrati tutti gli oggetti creati dall'utente cercato; ");

        searchButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        searchButton.setText("Cerca");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(assertRadioButton);
        assertRadioButton.setText("Asserzioni");
        assertRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assertRadioButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(domRadioButton);
        domRadioButton.setText("Domini");
        domRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                domRadioButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(procRadioButton);
        procRadioButton.setText("Procedure");
        procRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procRadioButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(schemaRadioButton);
        schemaRadioButton.setText("Schemi");
        schemaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemaRadioButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(seqRadioButton);
        seqRadioButton.setText("Sequenze");
        seqRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seqRadioButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(tabRadioButton);
        tabRadioButton.setText("Tabelle");
        tabRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabRadioButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(trigRadioButton);
        trigRadioButton.setText("Trigger");
        trigRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trigRadioButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(vincoloRadioButton);
        vincoloRadioButton.setText("Vincoli");
        vincoloRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vincoloRadioButtonActionPerformed(evt);
            }
        });

        oggButtonGroup.add(vistaRadioButton);
        vistaRadioButton.setText("Viste");
        vistaRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vistaRadioButtonActionPerformed(evt);
            }
        });

        objectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(objectTable);

        jLabel1.setText("Selezionare un bottone per visualizzare gli oggetti corrispondenti:");

        jLabel2.setText("Se la ricerca ha prodotto più risultati, selezionare la riga a cui si è interessati, per un solo risultato non è necessario selezionare una riga");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(selectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 31, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(assertRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(domRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(procRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(schemaRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(seqRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(tabRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(trigRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(vincoloRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(vistaRadioButton))
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(searchButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectLabel)
                .addGap(0, 0, 0)
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assertRadioButton)
                    .addComponent(domRadioButton)
                    .addComponent(procRadioButton)
                    .addComponent(schemaRadioButton)
                    .addComponent(seqRadioButton)
                    .addComponent(tabRadioButton)
                    .addComponent(trigRadioButton)
                    .addComponent(vincoloRadioButton)
                    .addComponent(vistaRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    //alla pressione del tasto cerca, esegue la query SELECT che cerca nel database l'utente desiderato
    //se questo viene trovato, allora la riga corrispondente a quell'utente viene posta nella userTable
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        PreparedStatement pstmt;
        ResultSet rs;
        String query = "SELECT * FROM utente ";
        
        if(!usernameTextField.getText().equals("")){
            query += " WHERE username = ?";
        }
           
        try{  
            pstmt = Database.getDefaultConnection().prepareStatement(query,  ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            if(!usernameTextField.getText().equals("")){
                pstmt.setString(1, usernameTextField.getText());
            }
            rs = pstmt.executeQuery();
                
            if(rs.last()){
                rs.beforeFirst();
                    
                userTableModel = new TableModel(rs);
                userTableModel.setEditable(false);
                userTableModel.setNumColumn();
                
                while(rs.next()) {
                    int riga = userTableModel.getRowCount(); 
                    userTableModel.setRowCount(userTableModel.getRowCount() + 1); //nuova riga
                    for(int c = 0; c < userTableModel.getColumnCount(); c++) {
                        Object valore = rs.getObject(c+1);
                        userTableModel.setValueAt(valore, riga, c);
                    }
                }
                    
                utenteTrovato = SI;
                userTable.setModel(userTableModel);
            }else{
                JOptionPane.showMessageDialog(this, "Nessun utente trovato !", "Ricerca vuota", JOptionPane.WARNING_MESSAGE);
                userTable.setModel(new DefaultTableModel());
                objectTable.setModel(new DefaultTableModel());
                utenteTrovato = NO;
            }
                
            pstmt.close();
        }catch(SQLException e){
            mostraErrore(e);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    //mostra gli oggetti Asserzione creati dall'utente nella objectTable
    private void assertRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assertRadioButtonActionPerformed
        mostraOggetti("SELECT nomeAsserzione, ClausolaNotExists, Schema FROM asserzione");
    }//GEN-LAST:event_assertRadioButtonActionPerformed

    //mostra gli oggetti Dominio creati dall'utente nella objectTable
    private void domRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_domRadioButtonActionPerformed
        mostraOggetti("SELECT nomeDominio, Tipo, Schema FROM dominio");
    }//GEN-LAST:event_domRadioButtonActionPerformed

    //mostra gli oggetti Procedura creati dall'utente nella objectTable
    private void procRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procRadioButtonActionPerformed
        mostraOggetti("SELECT nomeProcedura, bloccoCodice, tipo, tipoRitorno, schema FROM procedura");
    }//GEN-LAST:event_procRadioButtonActionPerformed

    //mostra gli oggetti Schema creati dall'utente nella objectTable
    private void schemaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemaRadioButtonActionPerformed
        mostraOggetti("SELECT nomeSchema FROM schema1");
    }//GEN-LAST:event_schemaRadioButtonActionPerformed

    //mostra gli oggetti Sequenza creati dall'utente nella objectTable
    private void seqRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seqRadioButtonActionPerformed
        mostraOggetti("SELECT nomeSeq, incremento, valIniziale, valMax, cycle, schema FROM sequenza");
    }//GEN-LAST:event_seqRadioButtonActionPerformed

    //mostra gli oggetti Tabella creati dall'utente nella objectTable
    private void tabRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabRadioButtonActionPerformed
        mostraOggetti("SELECT nomeTabella, dataCreazione, ultimaModifica, schema FROM tabella");
    }//GEN-LAST:event_tabRadioButtonActionPerformed

    //mostra gli oggetti Trigger creati dall'utente nella objectTable
    private void trigRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trigRadioButtonActionPerformed
        mostraOggetti("SELECT nomeTrigger, tempo, forEachRow, CondizioneWhen, causa, bloccoCodice, oggetto,schema FROM infoTrigger");
    }//GEN-LAST:event_trigRadioButtonActionPerformed

    //mostra gli oggetti Vista creati dall'utente nella objectTable
    private void vistaRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vistaRadioButtonActionPerformed
        mostraOggetti("SELECT nomeVista, query, schema FROM vista");
    }//GEN-LAST:event_vistaRadioButtonActionPerformed

    //mostra gli oggetti Vincolo creati dall'utente nella objectTable
    private void vincoloRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vincoloRadioButtonActionPerformed
        mostraOggetti("SELECT nomeVincolo, tipoVincolo, condizioneCheck, stato, tabella, schema FROM infoVincolo");
    }//GEN-LAST:event_vincoloRadioButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton assertRadioButton;
    private javax.swing.JRadioButton domRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable objectTable;
    private javax.swing.ButtonGroup oggButtonGroup;
    private javax.swing.JRadioButton procRadioButton;
    private javax.swing.JRadioButton schemaRadioButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel selectLabel;
    private javax.swing.JRadioButton seqRadioButton;
    private javax.swing.JRadioButton tabRadioButton;
    private javax.swing.JRadioButton trigRadioButton;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JRadioButton vincoloRadioButton;
    private javax.swing.JRadioButton vistaRadioButton;
    // End of variables declaration//GEN-END:variables
}
