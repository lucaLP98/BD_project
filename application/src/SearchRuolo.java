/*
 * file : SearchRuolo.java
 */
package progettopastoreluca;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Pannello che permette la visualizzazione di un ruolo e di tutti i privilegi 
 * (di Sistema o d'Oggetto) che lo compongono
 * 
 * @author Luca Pastore N86002599
 * @version 2019
 */
public class SearchRuolo extends javax.swing.JPanel {
    private TableModel ruoloTableModel; //modello della JTable ruoloTable che permette la visualizzazione del Ruolo cercato
    private TableModel privTableModel; //modello della tabella privilegioTable che permette la visualizzazione dei privilegi che compongono il Ruolo
    
    private int ruoloTrovato; //indica se il Ruolo cercato è stato trovato o meno
    private final int NO = 0;
    private final int SI = 1;
    
    /**
     * Creates new form SearchRuolo
     */
    public SearchRuolo() {
        this.setSize(770,418);
        initComponents();
        
        ruoloTrovato = NO;
        ruoloTable.setModel(new DefaultTableModel());
        privilegioTable.setModel(new DefaultTableModel());
    }

    //Metodo che mostra a video l'errore generatosi durante l'operazione SQL
    public void mostraErrore(SQLException e) {
        String msg;
        
        msg = "Codice Errore: " + e.getErrorCode() + "\n";
        msg += "Messaggio: " + e.getMessage() + "\n";
        msg += "SQLState: " + e.getSQLState() + "\n";

        JOptionPane.showMessageDialog(this, msg, "Errore", JOptionPane.ERROR_MESSAGE);
    }
    
    //riempe la tabella con i privilegi appartenenti al ruolo cercato
    private void creaPrivilegioTable(ResultSet rs){
        try{
            privTableModel = new TableModel(rs);
            privTableModel.setEditable(false);
            privTableModel.setNumColumn();
                
            while(rs.next()) {
                int riga = privTableModel.getRowCount(); 
                privTableModel.setRowCount(privTableModel.getRowCount() + 1); //nuova riga
                for(int c = 0; c < privTableModel.getColumnCount(); c++) {
                    Object valore = rs.getObject(c+1);
                    privTableModel.setValueAt(valore, riga, c);
                }
            }
                
            privilegioTable.setModel(privTableModel);    
        }catch(SQLException e){
            mostraErrore(e);
        }
    }
    
    //funzione che mostra le righe relative ai privilegi che compongono il ruolo nella privilegioTable
    private void mostraPrivilegi(String query){
        PreparedStatement pstmt;
        ResultSet rs;
        boolean continua = false;
        
        if(ruoloTrovato == SI){ 
            try{
                pstmt = Database.getDefaultConnection().prepareStatement(query + " WHERE ID_ruolo = ?");
                
                if(ruoloTable.getRowCount() == 1){
                    pstmt.setString(1, ruoloTable.getValueAt(0, 0).toString());
                    continua = true;
                }else if(ruoloTable.getSelectedRow() != -1){
                    pstmt.setString(1, ruoloTable.getValueAt(ruoloTable.getSelectedRow(), 0).toString());
                    continua = true;
                }else{
                    JOptionPane.showMessageDialog(this, "ERRORE: Selezionare prima una riga !", "Errore", JOptionPane.ERROR_MESSAGE);
                } 
                
                if(continua){
                    rs = pstmt.executeQuery();
                    creaPrivilegioTable(rs);
                }
            
                if(pstmt != null) pstmt.close();
            }catch(SQLException e){
                mostraErrore(e);
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        privButtonGroup = new javax.swing.ButtonGroup();
        searchLabel = new javax.swing.JLabel();
        ruoloTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ruoloTable = new javax.swing.JTable();
        selectLabel = new javax.swing.JLabel();
        selectLabel2 = new javax.swing.JLabel();
        privSisRadioButton = new javax.swing.JRadioButton();
        privOggRadioButton = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        privilegioTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        searchLabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        searchLabel.setText("Inserire l' Username dell'utente da cercare : ");

        ruoloTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        searchButton.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        searchButton.setText("Cerca");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        ruoloTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(ruoloTable);

        selectLabel.setText("Di seguito verranno mostrati tutti i Privilegi che compongono il ruolo;");

        selectLabel2.setText("Selezionare un bottone per visualizzare gli oggetti corrispondenti:");

        privButtonGroup.add(privSisRadioButton);
        privSisRadioButton.setText("Privilegi di Sistema");
        privSisRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privSisRadioButtonActionPerformed(evt);
            }
        });

        privButtonGroup.add(privOggRadioButton);
        privOggRadioButton.setText("Privilegi d' Oggetto");
        privOggRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privOggRadioButtonActionPerformed(evt);
            }
        });

        privilegioTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(privilegioTable);

        jLabel2.setText("Se la ricerca ha prodotto più risultati, selezionare la riga a cui si è interessati,  per un solo risultato non è necessario selezionare una riga");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(ruoloTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(selectLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(privSisRadioButton)
                                .addGap(18, 18, 18)
                                .addComponent(privOggRadioButton))
                            .addComponent(selectLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 719, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(searchButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ruoloTextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectLabel)
                .addGap(0, 0, 0)
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLabel2)
                    .addComponent(privSisRadioButton)
                    .addComponent(privOggRadioButton))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    //se il pulsante Cerca viene premuto e il campo ruoloTextField non è vuoto, 
    //viene eseguita la query SELECT per recuperare la riga del Ruolo cercato, se questo è 
    //presente nel database
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        PreparedStatement pstmt;
        ResultSet rs;
        String queryS = "SELECT * FROM ruolo ";

        if(!ruoloTextField.getText().equals("")){
            queryS += "WHERE nomeRuolo LIKE ?";
        }
        
        try{
            pstmt = Database.getDefaultConnection().prepareStatement(queryS,  ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);
            if(!ruoloTextField.getText().equals("")){
                pstmt.setString(1, ruoloTextField.getText()+"%");
            }
            rs = pstmt.executeQuery();

            if(rs.last()){
                rs.beforeFirst();

                ruoloTableModel = new TableModel(rs);
                ruoloTableModel.setEditable(false);
                ruoloTableModel.setNumColumn();

                while(rs.next()) {
                    int riga = ruoloTableModel.getRowCount();
                    ruoloTableModel.setRowCount(ruoloTableModel.getRowCount() + 1); //nuova riga
                    for(int c = 0; c < ruoloTableModel.getColumnCount(); c++) {
                        Object valore = rs.getObject(c+1);
                        ruoloTableModel.setValueAt(valore, riga, c);
                    }
                }

                ruoloTrovato = SI;
                ruoloTable.setModel(ruoloTableModel);
            }else{
                JOptionPane.showMessageDialog(this, "Nessun Ruolo trovato !", "Ricerca vuota", JOptionPane.WARNING_MESSAGE);
                ruoloTable.setModel(new DefaultTableModel());
                privilegioTable.setModel(new DefaultTableModel());
                ruoloTrovato = NO;
            }
            
            pstmt.close();
        }catch(SQLException e){
            mostraErrore(e);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    //mostra i privilegi di sistema nella privilegioTable
    private void privSisRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privSisRadioButtonActionPerformed
        mostraPrivilegi("SELECT ID_privSis FROM compRuoloSistema");
    }//GEN-LAST:event_privSisRadioButtonActionPerformed

    //mostra i privilegi d'oggetto nella privilegioTable
    private void privOggRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privOggRadioButtonActionPerformed
        mostraPrivilegi("SELECT ID_privOgg FROM compRuoloOggetto");
    }//GEN-LAST:event_privOggRadioButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.ButtonGroup privButtonGroup;
    private javax.swing.JRadioButton privOggRadioButton;
    private javax.swing.JRadioButton privSisRadioButton;
    private javax.swing.JTable privilegioTable;
    private javax.swing.JTable ruoloTable;
    private javax.swing.JTextField ruoloTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel selectLabel;
    private javax.swing.JLabel selectLabel2;
    // End of variables declaration//GEN-END:variables
}
